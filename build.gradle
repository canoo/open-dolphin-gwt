buildscript {
	// gradle-gwt plugin: https://github.com/steffenschaefer/gwt-gradle-plugin
	repositories {
		maven {
			url 'https://github.com/steffenschaefer/gwt-gradle-plugin/raw/maven-repo/'
		}
		mavenCentral()
		jcenter()
	}
	configurations {
		opendolphinjs
	}
	dependencies {
		classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.4'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
	}
}

group = 'org.open-dolphin'
version = '0.12.0'

apply plugin: 'gwt'
apply plugin: 'maven-publish'
apply plugin: 'bintray'

//def gwtBuildDir = 'war'

repositories {
	mavenCentral()
	ivy {
		name 'OpenDolphinJS'
		url 'http://dl.bintray.com/opendolphin/resources/'
		layout 'pattern', {
			artifact '[module]-[revision](.[classifier]).[ext]'
		}
	}
}

dependencies {
	compile ('com.google.gwt:gwt-servlet:2.6.0') {force = true} // explicit dependency just for IntelliJ since the IDE does not pick up the dependency from the gwt plugin
	opendolphinjs group: 'opendolphin', name: 'opendolphin', version: '0.12.0B1', ext: 'js'
}

task fetchWebappArtifacts(type: Copy) {
	from configurations.opendolphinjs
	into "src/main/resources/com/canoo/opendolphin/public"
	rename ('opendolphin-0.12.0B1.js', 'opendolphin.js')
}

jar {
    from sourceSets.main.allJava.matching { 
        include 'com/canoo/opendolphin/**/*.java' 
        include 'com/canoo/opendolphin/**/*.js' 
        exclude 'com/canoo/opendolphin/**/*.class' 
    } 
}

task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}

gwt {
	gwtVersion='2.6.0'
	modules 'com.canoo.opendolphin.OpenDolphin'

//    dev {
//        port=8080
//    }

	superDev {
		noPrecompile=true
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar {
				classifier "sources"
			}
		}
	}
}

bintray() {

	user = bintrayUser
	key = bintrayKey
	publications = ['mavenJava']
	pkg {
		userOrg = 'opendolphin'
		repo = 'mavenrepo'
		name = 'open-dolphin-gwt'
		licenses = ['Apache-2.0']
	}
}

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal') << {
	logger.info "Installing $project.name"
}

project.afterEvaluate {
	processResources.dependsOn fetchWebappArtifacts
}